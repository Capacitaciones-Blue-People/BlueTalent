/* Applies styles when the user's primary input mechanism (such as a mouse) can hover over elements */
@media (hover: hover) {
  /* … */
}

/* Applies styles only if your browser's viewport width is equal to or narrower than 1250px */
@media (max-width: 1250px) {
  /* … */
}

/* Applies to any device with a color screen: */
@media (color) {
  /* … */
}

/* Applies to any color device with at least 8 bits per color component */
@media (min-color: 8) {
  /* … */
}

/* Applies styles to landscape-oriented devices with a width of at least 30 ems: */
@media print (min-width: 30em) and (orientation: landscape) {
  /* … */
}

/* To limit the styles to devices with a screen */
@media screen and (min-width: 30em) and (orientation: landscape) {
  /* … */
}

/* Applies styles if the viewport height is at least 680px, or if the device is in portrait orientation: */
@media (min-height: 680px), screen and (orientation: portrait) {
  /* … */
}

/* If you use the not modifier, the whole query is evaluated as false */
@media not screen and (color), print and (color) {
  /* … */
}
/* Is evaluated as: */
@media (not (screen and (color))), print and (color) {
  /* … */
}

/* If you are writing a range of sizes */
@media (min-width: 30em) and (max-width: 50em) {
  /* … */
}
/* You can also use the range syntax */
@media (30em <= width <= 50em) {
  /* … */
}

Uses An+B notation to select elements from a list of sibling elements.
:nth-child
Uses An+B notation to select elements from a list of sibling elements, counting backwards from the end of the list.
:nth-last-child;

Uses An+B notation to select elements from a list of sibling elements that match a certain type from a list of sibling elements.
:nth-of-type
Uses An+B notation to select elements from a list of sibling elements that match a certain type from a list of sibling elements counting backwards from the end of the list.
:nth-last-of-type

Matches an element that is the first of its siblings.
:first-child
Matches an element that is the last of its siblings.
:last-child

Matches an element that is the first of its siblings, and also matches a certain type selector.
:first-of-type
Matches an element that is the last of its siblings, and also matches a certain type selector.
:last-of-type

::before
::after
::placeholder
::first-letter
::first-line
